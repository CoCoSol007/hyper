/*
 * SPDX-License-Identifier: GPL-3.0-or-later
 * Copyright (C) 2025 CoCoSol - Hyper
 * Copyright (C) 2025 Plouf-Charles - Hyper
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
}

ext {
    lwjglVersion = '3.3.3'
    jomlVersion = '1.10.5'
    lwjglNatives = ""
    switch (org.gradle.internal.os.OperatingSystem.current()) {
        case org.gradle.internal.os.OperatingSystem.WINDOWS:
            lwjglNatives = "natives-windows"; break
        case org.gradle.internal.os.OperatingSystem.LINUX:
            lwjglNatives = "natives-linux"; break
        case org.gradle.internal.os.OperatingSystem.MAC_OS:
            lwjglNatives = "natives-macos"; break
        default:
            throw new IllegalStateException("Unsupported OS for LWJGL natives.")
    }
    println "Using LWJGL Natives: $lwjglNatives" 
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    // This dependency is used by the application.
    implementation libs.guava
    
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation 'org.lwjgl:lwjgl'
    implementation 'org.lwjgl:lwjgl-glfw'
    implementation 'org.lwjgl:lwjgl-opengl'
    implementation 'org.lwjgl:lwjgl-stb' 

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

    implementation "org.joml:joml:${jomlVersion}"

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

task run2D(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass.set 'dev.cocosol.Renderer2D'
}

checkstyle {
    toolVersion = '10.12.4'
    configFile = file("checkstyle.xml")
}

// Ensure the build task depends on the Checkstyle analysis for the main source set
tasks.build.dependsOn tasks.checkstyleMain

application {
    // Define the main class for the application.
    mainClass = 'dev.cocosol.Main'
}
